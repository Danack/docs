Solid Structure

How to build an application using an injector.

We'll totally get onto that, but first something completely different.

The true nature of reality!


== Stuff that can't be unit tested.

getenv()
$_SERVER
file_get_contents();


== Stuff that can be unit tested.

function add(int $x, int $y) {
    return $x + y;
}

function 





Dependency injection recap.

All it is passing in parameters.

I have strong views on dependency injection.



// Want to move data from current to archive
function archiveData(DataStorage $current, DataStorage $archive)
{
   ...
}

class CurrentDataStorage extends DataStorage {}

class ArchiveDataStorage extends DataStorage {}

function archiveData(CurrentDataStorage $current, ArchiveDataStorage $archive)
{
   ...
}


// Want to move data from current to archive
function archiveData(DataStorageFactory $dsFactory)
{
   $current = $dsFactory->create('current');
   $archive = $dsFactory->create('archive');
}





function createArchiveContext(DataStorageFactory $dsFactory) {
    return new ArchiveContext(
        $dsFactory->create('current');
        $dsFactory->create('archive');
    );
}

$injector->delegate('ArchiveContext', 'createArchiveContext');


// Want to move data from current to archive
function archiveData(ArchiveContext $archiveContext)
{
   $current = $archiveContext->current;
   $archive = $archiveContext->archive;
   ...
}


   